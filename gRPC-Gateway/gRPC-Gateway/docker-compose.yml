version: "3.8"

x-logging: &fluent-bit
  driver: fluentd
  options:
    fluentd-address: ${FLUENT_BIT_ADDRESS}:24224

services:
  tour-service:
    image: tour_service
    build:
      context: ./TourService
      dockerfile: Dockerfile
    container_name: tour_service
    hostname: tour_service
    restart: always
    networks:
      - network
      - monitoring
    environment:
      MONGO_DB_URI: mongodb://root:pass@mongo:27017
      TOUR_SERVICE_ADDRESS: ${TOUR_SERVICE_ADDRESS}
    logging: *fluent-bit
    depends_on:
      - mongo


  blog-service:
    image: blog_service
    build:
      context: ./BlogService
      dockerfile: Dockerfile
    container_name: blog_service
    hostname: blog_service
    restart: always
    environment:
      BLOG_SERVICE_ADDRESS: ${BLOG_SERVICE_ADDRESS}
    networks:
      - network
      - monitoring
    logging: *fluent-bit
    depends_on:
      - database

  auth-service:
    image: auth_service
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: auth_service
    hostname: auth_service
    restart: always
    environment:
      AUTH_SERVICE_ADDRESS: ${AUTH_SERVICE_ADDRESS}
    networks:
      - network
      - monitoring
    logging: *fluent-bit
    depends_on:
      - database

  user-service:
    image: user_service
    build:
      context: ./UserManagementService
      dockerfile: Dockerfile
    container_name: user_service
    hostname: user_service
    restart: always
    environment:
      USER_MANAGEMENT_SERVICE_ADDRESS: ${USER_MANAGEMENT_SERVICE_ADDRESS}
    networks:
      - network
      - monitoring
    logging: *fluent-bit
    depends_on:
      - database

  database:
    image: mysql
    container_name: mysql
    restart: always
    networks:
      - network
      - monitoring
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: students
    logging: *fluent-bit
    volumes:
      - database-data:/var/lib/mysql

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    networks:
      - network
      - monitoring
    logging: *fluent-bit
    ports:
      - 8083:8080

  api_gateway:
    image: api_gateway
    container_name: api_gateway
    hostname: api_gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    restart: always
    environment:
      TOUR_SERVICE_ADDRESS: tour_service:8086
      BLOG_SERVICE_ADDRESS: blog_service:8085
      AUTH_SERVICE_ADDRESS: auth_service:8084
      USER_MANAGEMENT_SERVICE_ADDRESS: user_service:8089
      GATEWAY_ADDRESS: ${GATEWAY_ADDRESS}
    depends_on:
      - tour-service
      - blog-service
      - auth-service
      - user-service
    logging: *fluent-bit
    networks:
      - network
      - monitoring
    ports:
      - "8087:8087"

  mongo:
      image: mongo
      restart: always
      ports:
        - 27017:27017
      networks:
        - network
        - monitoring
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: pass
        MONGO_INITDB_DATABASE: mongoDemo
      healthcheck:
        test: echo 'db.runCommand("ping").ok'
        interval: 10s
        timeout: 10s
        retries: 10
      logging: *fluent-bit
      volumes:
        - mongo_store:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - network
      - monitoring
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017/
    depends_on:
      - mongo
    logging: *fluent-bit
    ports:
      - 8081:8081
    volumes:
      - mongo_express_data:/data/db

volumes:
  database-data:
    name: server-database
  mongo_store:
  mongo_express_data:

networks:
  network:
    driver: bridge
  monitoring:
    external: true